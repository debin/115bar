<?php/** * 邮件发送类 * @author ldb * @package library */class FuncHelper{    /**     * 获取key对应的语言内容     * @param  string $la        key     * @param  string $lang_type 语音类型     * @return [type]            [description]     */    public static function _($la, $lang_type = '')    {        return I18nHelper::getInstance()->getLang($la, $lang_type);    }    /**     * 对一个字符串或者array中的字符串 htmlspecialchars     *     * @author ldb     * @param mixed $mixed 要处理的数据     * @return mixed     */    public static function cat_html($mixed, $quote_style = ENT_QUOTES, $charset = 'UTF-8')    {        if (is_array($mixed)) {            foreach ($mixed as $key => $value) {                $mixed[$key] = self::cat_html($value, $quote_style, $charset);            }        } elseif (is_string($mixed)) {            $mixed = htmlspecialchars($mixed, $quote_style, $charset);        }        return $mixed;    }    /**     * 对一个字符串去掉 br nbsp     *     * @author ldb     * @param mixed $mixed 要处理的数据     * @return mixed     */    public static function trim_string($string)    {        $string = trim($string);        $string = str_replace("<br>", ' ', $string);        $string = str_replace("<br />", ' ', $string);        $string = str_replace("&nbsp;", ' ', $string);        $string = str_replace("  ", ' ', $string);        if (strpos($string, '  ')!==false) {            $string = self::trim_string($string);        }        return $string;    }    // 添加 nofollow 的回调函数    public static function addnofollow($matches)    {        // var_dump($matches);        $string = $matches[0] . '  rel="nofollow" target="_blank" ';        return $string;    }}